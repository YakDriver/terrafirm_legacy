---
version: 0.2

env:
  variables:
    TF_ZIP: https://releases.hashicorp.com/terraform/0.11.1/terraform_0.11.1_linux_amd64.zip
    TERRAFIRM_DESC_URL: https://github.com/YakDriver/terrafirm
  parameter-store:
    NAMED_PROFILE: "/CodeBuild/terrafirm/named_profile"
    SSH_KEY: "/CodeBuild/terrafirm/ssh_key"
    #SECRET_KEY: "/CodeBuild/terrafirm/secret_key"
    #PRIVATE_KEY: "/CodeBuild/terrafirm/access_key_id"

phases:
  install:
    commands:
      - echo "Installing unzip............"
      - apt -y install unzip
      - echo "Installing Terraform..."
      - echo `pwd`
      - curl -L "${TF_ZIP}" -o tf.zip && unzip tf.zip
      - echo "Installed Terraform."
  pre_build:
    commands:
      - |
        if [ -z "${NAMED_PROFILE}" ]
        then
          echo "No named profile given, using default (terrafirm)..."
          NAMED_PROFILE=terrafirm
        else
          NAMED_PROFILE="${NAMED_PROFILE}"
        fi
        export NAMED_PROFILE
        echo "AWS profile is $NAMED_PROFILE"
      - |
        if [ -n "${AWS_REGION}" ]
        then
          aws configure set region $AWS_REGION --profile $NAMED_PROFILE
        fi
      #- |
      #  if [ -z "${ACCESS_KEY}" ]
      #  then
      #    aws configure set aws_access_key_id "${ACCESS_KEY_ID}" --profile $NAMED_PROFILE
      #    aws configure set aws_secret_access_key "${SECRET_KEY}" --profile $NAMED_PROFILE
      #  fi
      - echo "AWS Profile setup..."
      - AWS_PROFILE=$NAMED_PROFILE
      - export AWS_PROFILE
      - echo "Terraform version " ; ./terraform --version
      - echo "Terraform config file " ; cat terrafirm.tf
      #- echo "Initializing Terraform " ; TF_VAR_private_key="${SSH_KEY}" ./terraform init -input=false
      - echo "Initializing Terraform " ; TF_VAR_private_key="${SSH_KEY}" ./terraform init -input=false
      - echo "Importing key pair " ; TF_VAR_private_key="${SSH_KEY}" ./terraform import aws_key_pair.auth svc_terrafirm
      - echo "Create provisiong plan " ; TF_VAR_private_key="${SSH_KEY}" ./terraform plan -out=tfplan -input=false
      - 
  build:
    commands:
      - echo "Applying Terraform plan (which installs watchmaker) "
      - echo "NOTE, this will fail if remote execute calls fail"
      - TF_VAR_private_key="${SSH_KEY}" ./terraform apply -input=false tfplan
      - TF_VAR_private_key="${SSH_KEY}" ./terraform state pull -target=aws_instance.centos6 -input=false
  post_build:
    commands:
      - echo "Destroying everything..."
      #- TF_VAR_private_key="${SSH_KEY}" ./terraform destroy -input=false -force
      #- TF_VAR_private_key="${SSH_KEY}" ./terraform destroy -target=aws_instance.centos6 -input=false -force
      #- echo "Sleeping a while to give instance a chance to terminate "; sleep 60
      #- TF_VAR_private_key="${SSH_KEY}" ./terraform destroy -target=aws_security_group.terrafirm -input=false -force
      - echo "Terrafirm completed on $(date)"

artifacts:
  files:
    - '**/*'
